#!/usr/bin/env node
global.USAGE = `
USAGE: effuvv-sync

Brings the system state in-line with what is specified in your configuration.
`;

(async () => {
  "use strict";

  try {
    const argv            = require("minimist")(process.argv.slice(2));
    const changes         = require("../lib/singletons/changes.js");
    const confPathname    = require("../lib/singletons/conf_pathname.js");
    const systemstate     = require("../lib/singletons/systemstate");

    const commands = {
      install:        require("../lib/commands/install.js"),
      packages:       require("../lib/commands/packages.js"),
      restartService: require("../lib/commands/restart_service.js"),
      run:            require("../lib/commands/run.js"),
      services:       require("../lib/commands/services.js"),
      usersAndGroups: require("../lib/commands/users_and_groups.js"),
    };

    if (argv.help) {
      console.log(global.USAGE);
      process.exit(0);
    }

    if (process.env["USER"] !== "root") {
      console.error("effuvv-sync must be ran as root");
      process.exit(1);
    }

    const conf = require(confPathname);
    await systemstate.load();

    const arg = Object.assign({}, commands, {
      changes,
      systemstate,
    });

    if (conf.beforePackages) {
      await conf.beforePackages(arg);
    }

    if (conf.packages) {
      await commands.packages(conf.packages);
    }

    if (conf.afterPackages) {
      await conf.afterPackages(arg);
    }

    if (conf.usersAndGroups) {
      //await commands.usersAndGroups(conf.usersAndGroups);
    }

    if (conf.services) {
      //await commands.services(conf.services);
    }

    await systemstate.save();
  } catch (e) {
    console.error("error occurred:", e.message);
    console.error(e.stack);
    process.exit(1);
  }
})();
